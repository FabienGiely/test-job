name: Check version drift preprod vs prod

on:
  pull_request:
    branches: [ release-prod ]
    types: [opened, synchronize, reopened, edited]
  workflow_dispatch:

jobs:
  compare-versions:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write   # ‚¨ÖÔ∏è n√©cessaire pour cr√©er un check-run

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compare preprod.json vs prod.json
        id: compare
        continue-on-error: true  # ‚¨ÖÔ∏è la step peut √©chouer, le job restera vert
        run: |
          set -euo pipefail
          PREPROD="preprod.json"
          PROD="prod.json"

          if [[ ! -f "$PREPROD" || ! -f "$PROD" ]]; then
            echo "::error ::Fichiers $PREPROD ou $PROD introuvables."
            echo "has_diffs=true" >> $GITHUB_OUTPUT
            echo "summary_for_comment=### üîé Comparaison des versions\n:warning: Fichiers introuvables." >> $GITHUB_OUTPUT
            exit 1
          fi

          jq -r '.[].name' "$PREPROD" | sort > /tmp/preprod.names
          jq -r '.[].name' "$PROD"     | sort > /tmp/prod.names

          MISSING_IN_PROD=$(comm -23 /tmp/preprod.names /tmp/prod.names || true)
          MISSING_IN_PREPROD=$(comm -13 /tmp/preprod.names /tmp/prod.names || true)
          COMMON=$(comm -12 /tmp/preprod.names /tmp/prod.names || true)

          DIFFS=""
          while IFS= read -r SVC; do
            [[ -z "$SVC" ]] && continue
            VP=$(jq -r --arg n "$SVC" '.[] | select(.name==$n) | .version' "$PREPROD")
            VR=$(jq -r --arg n "$SVC" '.[] | select(.name==$n) | .version' "$PROD")
            if [[ "$VP" != "$VR" ]]; then
              DIFFS+="- \`$SVC\`: preprod=\`$VP\` vs prod=\`$VR\`\n"
              echo "::error ::$SVC: preprod=$VP vs prod=$VR"
            fi
          done <<< "$COMMON"

          HAS_DIFFS=0
          SUMMARY="### üîé Comparaison des versions (preprod vs prod)\n"

          if [[ -n "$MISSING_IN_PROD" ]]; then
            HAS_DIFFS=1
            SUMMARY+="\n**Manquants dans prod**:\n"
            while IFS= read -r SVC; do
              [[ -z "$SVC" ]] && continue
              SUMMARY+="- \`$SVC\`\n"
            done <<< "$MISSING_IN_PROD"
          fi
          if [[ -n "$MISSING_IN_PREPROD" ]]; then
            HAS_DIFFS=1
            SUMMARY+="\n**Manquants dans preprod**:\n"
            while IFS= read -r SVC; do
              [[ -z "$SVC" ]] && continue
              SUMMARY+="- \`$SVC\`\n"
            done <<< "$MISSING_IN_PREPROD"
          fi
          if [[ -n "$DIFFS" ]]; then
            HAS_DIFFS=1
            SUMMARY+="\n**Versions diff√©rentes**:\n$DIFFS"
          fi
          if [[ $HAS_DIFFS -eq 0 ]]; then
            SUMMARY+="\n‚úÖ Aucune diff√©rence d√©tect√©e."
            echo "has_diffs=false" >> $GITHUB_OUTPUT
          else
            echo "has_diffs=true" >> $GITHUB_OUTPUT
          fi

          printf "%b" "$SUMMARY" >> $GITHUB_STEP_SUMMARY

          # encode pour passage via env
          SUMMARY_ESCAPED=$(python3 - <<'PY'
          import sys, urllib.parse
          print(urllib.parse.quote(sys.stdin.read()))
          PY
          <<< "$SUMMARY")
          echo "summary_uri=$SUMMARY_ESCAPED" >> $GITHUB_OUTPUT

          # En cas de diffs on sort 1 (mais step non bloquante)
          if [[ $HAS_DIFFS -ne 0 ]]; then
            exit 1
          fi

      - name: Create PR comment
        if: always() && github.event.pull_request.number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const summary = decodeURIComponent(process.env.SUMMARY_URI || '');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: summary || "Comparaison effectu√©e."
            });
        env:
          SUMMARY_URI: ${{ steps.compare.outputs.summary_uri }}

      - name: Create non-blocking check-run
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const hasDiffs = (process.env.HAS_DIFFS || 'false') === 'true';
            const summary = decodeURIComponent(process.env.SUMMARY_URI || '');
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Preprod vs Prod Versions',
              head_sha: context.payload.pull_request.head.sha,
              status: 'completed',
              conclusion: hasDiffs ? 'failure' : 'success',
              output: {
                title: 'Comparaison des versions preprod vs prod',
                summary: summary || (hasDiffs ? 'Des diff√©rences ont √©t√© d√©tect√©es.' : 'Aucune diff√©rence d√©tect√©e.')
              }
            });
        env:
          HAS_DIFFS: ${{ steps.compare.outputs.has_diffs }}
          SUMMARY_URI: ${{ steps.compare.outputs.summary_uri }}
