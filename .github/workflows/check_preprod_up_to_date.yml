name: Check version drift preprod vs prod

on:
  pull_request:
    branches: [ release-prod ]
    types: [opened, synchronize, reopened, edited]
  workflow_dispatch:

jobs:
  version-drift:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write   # pour commenter la PR

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compare preprod.json vs prod.json
        id: compare
        # <â€” cette step peut Ã©chouer (exit 1) pour que le JOB soit en rouge (non bloquant si non-required)
        run: |
          set -euo pipefail
          PREPROD="preprod.json"
          PROD="prod.json"

          if [[ ! -f "$PREPROD" || ! -f "$PROD" ]]; then
            SUMMARY="### ðŸ”Ž Comparaison des versions (preprod vs prod)\n:warning: Fichiers introuvables: \`$PREPROD\` ou \`$PROD\`."
            echo "has_diffs=true" >> $GITHUB_OUTPUT
          else
            jq -r '.[].name' "$PREPROD" | sort > /tmp/preprod.names
            jq -r '.[].name' "$PROD"     | sort > /tmp/prod.names

            MISSING_IN_PROD=$(comm -23 /tmp/preprod.names /tmp/prod.names || true)
            MISSING_IN_PREPROD=$(comm -13 /tmp/preprod.names /tmp.prod.names || true) || true
            MISSING_IN_PREPROD=$(comm -13 /tmp/preprod.names /tmp/prod.names || true)
            COMMON=$(comm -12 /tmp/preprod.names /tmp/prod.names || true)

            DIFFS=""
            while IFS= read -r SVC; do
              [[ -z "$SVC" ]] && continue
              VP=$(jq -r --arg n "$SVC" '.[] | select(.name==$n) | .version' "$PREPROD")
              VR=$(jq -r --arg n "$SVC" '.[] | select(.name==$n) | .version' "$PROD")
              if [[ "$VP" != "$VR" ]]; then
                DIFFS+="- \`$SVC\`: preprod=\`$VP\` vs prod=\`$VR\`\n"
              fi
            done <<< "$COMMON"

            SUMMARY="### ðŸ”Ž Comparaison des versions (preprod vs prod)\n"
            HAS_DIFFS=0

            if [[ -n "$MISSING_IN_PROD" ]]; then
              HAS_DIFFS=1
              SUMMARY+="\n**Manquants dans prod**:\n"
              while IFS= read -r SVC; do [[ -n "$SVC" ]] && SUMMARY+="- \`$SVC\`\n"; done <<< "$MISSING_IN_PROD"
            fi
            if [[ -n "$MISSING_IN_PREPROD" ]]; then
              HAS_DIFFS=1
              SUMMARY+="\n**Manquants dans preprod**:\n"
              while IFS= read -r SVC; do [[ -n "$SVC" ]] && SUMMARY+="- \`$SVC\`\n"; done <<< "$MISSING_IN_PREPROD"
            fi
            if [[ -n "$DIFFS" ]]; then
              HAS_DIFFS=1
              SUMMARY+="\n**Versions diffÃ©rentes**:\n$DIFFS"
            fi

            if [[ $HAS_DIFFS -eq 0 ]]; then
              SUMMARY+="\nâœ… Aucune diffÃ©rence dÃ©tectÃ©e."
              echo "has_diffs=false" >> $GITHUB_OUTPUT
            else
              echo "has_diffs=true" >> $GITHUB_OUTPUT
            fi
          fi

          printf "%b" "$SUMMARY" >> $GITHUB_STEP_SUMMARY

          # encode pour passage via env (commentaire PR)
          SUMMARY_URI=$(python3 - <<'PY'
          import sys, urllib.parse
          print(urllib.parse.quote(sys.stdin.read()))
          PY
          <<< "$SUMMARY")
          echo "summary_uri=$SUMMARY_URI" >> $GITHUB_OUTPUT

          # Si diffÃ©rences, on Ã©choue la step (le job sera rouge) â€” non bloquant si non-required.
          if [[ "$(jq -r .has_diffs <<< "{\"has_diffs\":\"$(grep -o 'has_diffs=.*' $GITHUB_OUTPUT | cut -d= -f2 || echo false)\"}")" != "false" ]]; then
            exit 1
          fi

      - name: Comment PR with results
        if: always() && github.event.pull_request.number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const body = decodeURIComponent(process.env.SUMMARY_URI || '');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: body || "Comparaison effectuÃ©e."
            });
        env:
          SUMMARY_URI: ${{ steps.compare.outputs.summary_uri }}
