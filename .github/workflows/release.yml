name: Release (patch-only)
on:
  push:
    branches: [ "release/*" ]

permissions:
  contents: write

jobs:
  tag_patch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Parse release branch (release/M.N)
        id: br
        run: |
          b="${GITHUB_REF_NAME}"
          [[ "$b" =~ ^release/[0-9]+\.[0-9]+$ ]] || { echo "Run only on release/M.N"; exit 1; }
          echo "minor=${b#release/}" >> "$GITHUB_OUTPUT"

      - name: Compute next vM.N.P for this line
        id: ver
        run: |
          set -e
          MINOR="${{ steps.br.outputs.minor }}"
          last=$(git tag -l "v${MINOR}.*" --sort=-v:refname | head -n1 || true)
          if [ -z "$last" ]; then last="v${MINOR}.0"; fi
          # normalize vM.N -> vM.N.0
          if [[ "$last" =~ ^v[0-9]+\.[0-9]+$ ]]; then last="${last}.0"; fi
          M=${MINOR%%.*}
          N=${MINOR##*.}
          P=$(( ${last##*.} + 1 ))
          echo "next=v${M}.${N}.${P}" >> "$GITHUB_OUTPUT"

      - name: Create tag & GitHub Release
        id: tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

          custom_tag: ${{ steps.ver.outputs.next }}
          tag_prefix: ""                 # on fournit déjà "v…"
          release_branches: release/*    # sécurité: ne tourne que sur release/*

      - name: Create GitHub Release notes
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          generate_release_notes: true
