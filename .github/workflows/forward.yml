name: Forward merges (multi-line with PAT + diff check)
on:
  push:
    branches: [ "release/*" ]

permissions:
  contents: read
  pull-requests: read

jobs:
  detect-targets:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build.outputs.matrix }}
    env:
      MAX_FORWARD: "5"     # nombre max de mineures à propager
      INCLUDE_MAIN: "true" # ajoute main comme cible
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Build forward targets
        id: build
        shell: bash
        run: |
          set -euo pipefail
          branch="${GITHUB_REF_NAME}"   # ex: release/0.1
          if [[ ! "$branch" =~ ^release/([0-9]+)\.([0-9]+)$ ]]; then
            echo "matrix=[]" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          M="${BASH_REMATCH[1]}"
          N="${BASH_REMATCH[2]}"

          git fetch --prune origin '+refs/heads/*:refs/remotes/origin/*'
          mapfile -t rels < <(git branch -r --list "origin/release/${M}.*" | sed 's#origin/##')

          targets=()
          for ((i=1; i<=${MAX_FORWARD}; i++)); do
            next="release/${M}.$((N+i))"
            if printf '%s\n' "${rels[@]}" | grep -qx "$next"; then
              targets+=("$next")
            fi
          done

          if [[ "${INCLUDE_MAIN}" == "true" ]]; then
            targets+=("main")
          fi

          uniq_targets=$(printf "%s\n" "${targets[@]}" | awk '!seen[$0]++')

          json='['
          sep=''
          for t in $uniq_targets; do
            json="${json}${sep}{\"base\":\"${t}\"}"
            sep=','
          done
          json="${json}]"

          echo "matrix=$json" >> "$GITHUB_OUTPUT"

  forward:
    needs: detect-targets
    if: ${{ needs.detect-targets.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.detect-targets.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Fetch all branches
        run: git fetch --prune origin '+refs/heads/*:refs/remotes/origin/*'

      - name: Open PR with PAT if ahead and diff
        env:
          GH_TOKEN: ${{ secrets.PAT_FORWARD }}
        shell: bash
        run: |
          SRC="${GITHUB_REF_NAME}"   # ex: release/0.1
          TGT="${{ matrix.base }}"

          echo "Checking $SRC → $TGT"

          # Vérifie commits ahead
          AHEAD=$(git rev-list --right-only --count "origin/${TGT}...origin/${SRC}" || echo 0)
          if [ "$AHEAD" -eq 0 ]; then
            echo "No commits ahead from $SRC to $TGT."
            exit 0
          fi

          # Vérifie diff de fichiers
          DIFF=$(git diff --name-only "origin/${TGT}...origin/${SRC}" | wc -l | xargs)
          if [ "$DIFF" -eq 0 ]; then
            echo "Commits ahead but no file changes from $SRC to $TGT."
            exit 0
          fi

          echo "Ahead commits: $AHEAD, Changed files: $DIFF"

          # Ouvre une PR seulement si aucune n'existe déjà
          OPEN=$(gh pr list --state open --base "$TGT" --head "$SRC" --json number --jq 'length')
          if [ "$OPEN" -eq 0 ]; then
            gh pr create \
              --base "$TGT" \
              --head "$SRC" \
              --title "chore: forward $SRC → $TGT" \
              --body  "Propagation automatique depuis \`$SRC\`."
          else
            echo "PR already open from $SRC to $TGT"
          fi
